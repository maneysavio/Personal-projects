{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red254\green187\blue91;\red86\green132\blue173;\red133\green96\blue154;\red88\green118\blue71;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c34510\c46275\c27843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 public class \cf4 test \{\
    \cf2 static  int \cf5 boxassigner\cf4 (\cf2 int \cf4 i\cf2 , int \cf4 j) \{\
        \cf2 if \cf4 (i >= \cf6 0 \cf4 && i <= \cf6 2\cf4 ) \{\
            \cf2 if \cf4 (j >= \cf6 0 \cf4 && j <= \cf6 2\cf4 ) \{\
                \cf2 return \cf6 1\cf2 ;\
            \cf4 \} \cf2 else if \cf4 (j >= \cf6 3 \cf4 && j <= \cf6 5\cf4 ) \{\
                \cf2 return \cf6 2\cf2 ;\
            \cf4 \} \cf2 else \cf4 \{\
                \cf2 return \cf6 3\cf2 ;\
            \cf4 \}\
        \}\
        \cf2 else if \cf4 (i >= \cf6 3 \cf4 && i <= \cf6 5\cf4 ) \{\
            \cf2 if \cf4 (j >= \cf6 0 \cf4 && j <= \cf6 2\cf4 ) \{\
                \cf2 return \cf6 4\cf2 ;\
            \cf4 \} \cf2 else if \cf4 (j >= \cf6 3 \cf4 && j <= \cf6 5\cf4 ) \{\
                \cf2 return \cf6 5\cf2 ;\
            \cf4 \} \cf2 else \cf4 \{\
                \cf2 return \cf6 6\cf2 ;\
            \cf4 \}\
        \}\
        \cf2 else\cf4 \{\
            \cf2 if \cf4 (j >= \cf6 0 \cf4 && j <= \cf6 2\cf4 ) \{\
                \cf2 return \cf6 7\cf2 ;\
            \cf4 \} \cf2 else if \cf4 (j >= \cf6 3 \cf4 && j <= \cf6 5\cf4 ) \{\
                \cf2 return \cf6 8\cf2 ;\
            \cf4 \} \cf2 else \cf4 \{\
                \cf2 return \cf6 9\cf2 ;\
            \cf4 \}\
        \}\
    \}\
    \cf2 static boolean \cf5 boxchecker\cf4 (\cf2 int \cf4 [][] sudoku\cf2 , int \cf4 boxnum\cf2 , int \cf4 num)\{\
        \cf2 boolean \cf4 f=\cf2 true;\
        if\cf4 (boxnum == \cf6 1\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 3\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 0\cf2 ; \cf4 j < \cf6 3\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 2\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 3\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 3\cf2 ; \cf4 j < \cf6 6\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 3\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 3\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 6\cf2 ; \cf4 j < \cf6 9\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 4\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 3\cf2 ; \cf4 i < \cf6 6\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 0\cf2 ; \cf4 j < \cf6 3\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 5\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 3\cf2 ; \cf4 i < \cf6 6\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 3\cf2 ; \cf4 j < \cf6 6\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 6\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 3\cf2 ; \cf4 i < \cf6 6\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 6\cf2 ; \cf4 j < \cf6 9\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 7\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 6\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 0\cf2 ; \cf4 j < \cf6 3\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else if\cf4 (boxnum == \cf6 8\cf4 )\{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 6\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 3\cf2 ; \cf4 j < \cf6 6\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 else\cf4 \{\
            \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 6\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
                \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 6\cf2 ; \cf4 j < \cf6 9\cf2 ; \cf4 j++) \{\
                    \cf2 if \cf4 (sudoku[i][j] == num) \{\
                        f = \cf2 false;\
                        break;\
                    \cf4 \}\
                \}\
            \}\
        \}\
        \cf2 return \cf4 f\cf2 ;\
    \cf4 \}\
\
    \cf2 static boolean \cf5 isSafe\cf4 (\cf2 int\cf4 [][] sudoku\cf2 , int \cf4 num\cf2 ,int \cf4 row\cf2 ,int \cf4 col)\{\
        \cf2 boolean \cf4 b1=\cf2 true,\cf4 b2=\cf2 true,\cf4 b3=\cf2 true,\cf4 b=\cf2 false;\
        int \cf4 boxnum\cf2 ;\
        for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
            \cf2 if \cf4 (sudoku[row][i] == num) \{\
                b1 = \cf2 false;\
                break;\
            \cf4 \}\
        \}\
        \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
            \cf2 if\cf4 (sudoku[i][col]==num)\{\
                b2=\cf2 false;\
                break;\
            \cf4 \}\
        \}\
        boxnum=
\f1\i boxassigner
\f0\i0 (row\cf2 ,\cf4 col)\cf2 ;\
        \cf4 b3=
\f1\i boxchecker
\f0\i0 (sudoku\cf2 ,\cf4 boxnum\cf2 ,\cf4 num)\cf2 ;\
        if\cf4 ((b1==\cf2 true\cf4 )&&(b2==\cf2 true\cf4 )&&(b3==\cf2 true\cf4 ))\{\
            b=\cf2 true;\
        \cf4 \}\
        \cf2 return  \cf4 b\cf2 ;\
    \cf4 \}\
    \cf2 static boolean \cf5 solve\cf4 (\cf2 int \cf4 [][] sudoku)\{\
        \cf2 for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
            \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 0\cf2 ; \cf4 j < \cf6 9\cf2 ; \cf4 j++) \{\
                \cf2 if\cf4 (sudoku[i][j]==\cf6 0\cf4 )\{\
                    \cf2 for \cf4 (\cf2 int \cf4 k = \cf6 1\cf2 ; \cf4 k < \cf6 10 \cf2 ; \cf4 k++)\{\
                        \cf2 if \cf4 (
\f1\i isSafe
\f0\i0 (sudoku\cf2 ,\cf4 k\cf2 , \cf4 i\cf2 , \cf4 j))\{\
                            sudoku[i][j] =k\cf2 ;\
                            if\cf4 (
\f1\i solve
\f0\i0 (sudoku))\{\
                                \cf2 return true;\
                            \cf4 \}\
                            \cf2 else\cf4 \{\
                                sudoku[i][j]=\cf6 0\cf2 ;\
                            \cf4 \}\
                        \}\
                    \}\
                    \cf2 return false;\
                \cf4 \}\
            \}\
        \}\
        \cf2 return true;\
    \cf4 \}\
    \cf2 public static void \cf5 main\cf4 (String[] args) \{\
        \cf2 int\cf4 [][] sudoku = \{ \{\cf6 0\cf2 ,\cf6 8\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 9\cf2 ,\cf6 0\cf2 ,\cf6 0\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 7\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 1\cf2 ,\cf6 0\cf2 ,\cf6 0\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 6\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 2\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 4\cf4 \}\cf2 ,\
                           \cf4 \{\cf6 7\cf2 ,\cf6 5\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 9\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 6\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 9\cf2 ,\cf6 0\cf2 ,\cf6 4\cf2 ,\cf6 8\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 3\cf4 \}\cf2 ,\
                           \cf4 \{\cf6 0\cf2 ,\cf6 4\cf2 ,\cf6 8\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 3\cf2 ,\cf6 0\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 1\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 0\cf4 \}\cf2 ,\cf4 \{\cf6 0\cf2 ,\cf6 3\cf2 ,\cf6 0\cf2 ,\cf6 5\cf2 ,\cf6 0\cf2 ,\cf6 0\cf2 ,\cf6 8\cf2 ,\cf6 0\cf2 ,\cf6 0\cf4 \} \}\cf2 ;\
        boolean \cf4 t=
\f1\i solve
\f0\i0 (sudoku)\cf2 ;\
        for \cf4 (\cf2 int \cf4 i = \cf6 0\cf2 ; \cf4 i < \cf6 9\cf2 ; \cf4 i++) \{\
            \cf2 for \cf4 (\cf2 int \cf4 j = \cf6 0\cf2 ; \cf4 j < \cf6 9\cf2 ; \cf4 j++) \{\
                System.
\f1\i \cf7 out
\f0\i0 \cf4 .print(sudoku[i][j] + \cf8 "\cf2 \\t\cf8 "\cf4 )\cf2 ;\
            \cf4 \}\
            System.
\f1\i \cf7 out
\f0\i0 \cf4 .print(\cf8 "\cf2 \\n\cf8 "\cf4 )\cf2 ;\
        \cf4 \}\
    \}\
\}\
}